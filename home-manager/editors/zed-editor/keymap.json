// Zed keymap
//
// For information on binding keys, see the Zed
// documentation: https://zed.dev/docs/key-bindings
//
// To see the default key bindings run `zed: open default keymap`
// from the command palette.
[
  {
    "context": "!Terminal && !AgentPanel && !ProjectPanel && !CommandPalette && !Editor",
    "bindings": {
      // prevent use mouse
      "space f": "file_finder::Toggle",

      // customize
      "ctrl-f": "workspace::ToggleZoom",
      "ctrl-m": "terminal_panel::Toggle",
      "ctrl-n": "workspace::ToggleRightDock",
      "space e": "workspace::ToggleLeftDock"
    }
  },
  {
    "context": "Editor && vim_mode == insert",
    "bindings": {
      "j k": "vim::NormalBefore",
      "ctrl-e": "editor::Backspace"
    }
  },
  {
    "context": "vim_mode == helix_normal && !menu",
    "bindings": {
      "space x": "pane::CloseActiveItem",
      "shift-k": "pane::ActivateNextItem",
      "shift-j": "pane::ActivatePreviousItem",

      // customize
      "space e": "workspace::ToggleLeftDock",

      // zellij behavior
      "ctrl-f": "workspace::ToggleZoom",
      "ctrl-m": "terminal_panel::Toggle",
      "ctrl-n": "workspace::ToggleRightDock",

      "ctrl-h": "workspace::ActivatePaneLeft",
      "ctrl-l": "workspace::ActivatePaneRight",
      "ctrl-k": "workspace::ActivatePaneUp",
      "ctrl-j": "workspace::ActivatePaneDown",

      // disable some keys
      "up": null,
      "down": null,
      "left": null,
      "right": null
    }
  },
  {
    "context": "Terminal",
    "bindings": {
      // zellij behavior
      "ctrl-f": "workspace::ToggleZoom",
      "ctrl-m": "terminal_panel::Toggle",
      "ctrl-n": "workspace::ToggleRightDock",
      // "space e": "workspace::ToggleLeftDock",

      "ctrl-h": "workspace::ActivatePaneLeft",
      "ctrl-l": "workspace::ActivatePaneRight",
      "ctrl-k": "workspace::ActivatePaneUp",
      "ctrl-j": "workspace::ActivatePaneDown"
    }
  },
  {
    "context": "AgentPanel",
    "bindings": {
      // zellij behavior
      "ctrl-f": "workspace::ToggleZoom",
      "ctrl-m": "terminal_panel::Toggle",
      "ctrl-n": "workspace::ToggleRightDock",
      // "space e": "workspace::ToggleLeftDock",

      "ctrl-h": "workspace::ActivatePaneLeft",
      "ctrl-l": "workspace::ActivatePaneRight",
      "ctrl-k": "workspace::ActivatePaneUp",
      "ctrl-j": "workspace::ActivatePaneDown"
    }
  },

  {
    "context": "ProjectPanel",
    "bindings": {
      // zellij behavior
      "ctrl-f": "workspace::ToggleZoom",
      "ctrl-m": "terminal_panel::Toggle",
      "ctrl-n": "workspace::ToggleRightDock",
      "space e": "workspace::ToggleLeftDock",

      "ctrl-h": "workspace::ActivatePaneLeft",
      "ctrl-l": "workspace::ActivatePaneRight",
      "ctrl-k": "workspace::ActivatePaneUp",
      "ctrl-j": "workspace::ActivatePaneDown"
    }
  },
  {
    "context": "ProjectPanel && not_editing",
    "bindings": {
      "a": "project_panel::NewFile",
      "shift-a": "project_panel::NewDirectory",
      "x": "project_panel::Cut",
      "y": "project_panel::Copy",
      "p": "project_panel::Paste",
      "c c": "workspace::CopyPath",
      "r": "project_panel::Rename",
      "d": ["project_panel::Trash", { "skip_prompt": true }]
    }
  }
]
